spring:
  application:
    name: bookings
  datasource:
    url: ${SPRING_DATASOURCE_URL}
    username: ${SPRING_DATASOURCE_USERNAME}
    password: ${SPRING_DATASOURCE_PASSWORD}
    driver-class-name: org.postgresql.Driver
  jpa:
    database-platform: org.hibernate.dialect.PostgreSQLDialect
    hibernate:
      ddl-auto: update
    show-sql: true
    properties:
      hibernate:
        format_sql: true
  data:
    redis:
      port: ${REDIS_PORT}
      host: ${REDIS_HOST}
      connect-timeout: 2s
      timeout: 5s
  cloud:
    function:
      definition: sendPayment; sendRefund
    stream:
      bindings:
        sendPayment-in-0:
          destination: send-update-status
          group: ${spring.application.name}
        sendRefund-in-0:
          destination: send-refund-status
          group: ${spring.application.name}
        sendRefund-out-0:
          destination: send-refund-bill
        sendPayment-out-0:
          destination: send-confirm-bill
  rabbitmq:
    port: ${RABBITMQ_PORT}
    host: ${RABBITMQ_HOST}
    username: ${RABBITMQ_USERNAME}
    password: ${RABBITMQ_PASSWORD}
management:
  endpoints:
    web:
      exposure:
        include: "*"
  health:
    readiness-state:
      enabled: true
    liveness-state:
      enabled: true
  endpoint:
    shutdown:
      access: unrestricted
    health:
      probes:
        enabled: true

server:
  port: 8081
eureka:
  instance:
    prefer-ip-address: true
  client:
    service-url:
      defaultZone: ${EUREKA_CLIENT_URL}
    register-with-eureka: true
    fetch-registry: true
logging:
  level:
    com.thuc.bookings: debug
debug: true